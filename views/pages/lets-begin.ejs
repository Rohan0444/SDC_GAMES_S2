<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Let's Begin - Among Us</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Orbitron:wght@400;700;900&family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #1A1A2E 0%, #16213E 50%, #0F0F23 100%);
      color: #fff;
      overflow-x: hidden;
      background-image: url('/images/among_us_background.svg');
      background-size: cover;
      background-attachment: fixed;
      min-height: 100vh;
      position: relative;
      overflow-y: auto;
    }

    /* Full-screen immersive background */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 20% 80%, rgba(255, 107, 107, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(104, 211, 145, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(58, 191, 248, 0.05) 0%, transparent 50%);
      z-index: -1;
      animation: backgroundPulse 8s ease-in-out infinite;
    }

    @keyframes backgroundPulse {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 0.6; }
    }

    /* Header */
    .header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      background: linear-gradient(180deg, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.7) 50%, transparent 100%);
      padding: 25px 60px;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      border-bottom: 1px solid rgba(229, 9, 20, 0.2);
      backdrop-filter: blur(15px);
    }

    .nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: relative;
    }

    .logo {
      font-family: 'Orbitron', monospace;
      font-size: 36px;
      font-weight: 900;
      color: #fff;
      text-decoration: none;
      letter-spacing: 2px;
      transition: color 0.3s ease;
    }

    .logo:hover {
      color: #FF6B6B;
    }

    .nav-menu {
      display: flex;
      list-style: none;
      gap: 40px;
    }

    .hamburger {
      display: none;
      flex-direction: column;
      cursor: pointer;
      padding: 5px;
    }

    .hamburger span {
      width: 25px;
      height: 3px;
      background: #fff;
      margin: 3px 0;
      transition: 0.3s;
      border-radius: 2px;
    }

    .hamburger.active span:nth-child(1) {
      transform: rotate(-45deg) translate(-5px, 6px);
    }

    .hamburger.active span:nth-child(2) {
      opacity: 0;
    }

    .hamburger.active span:nth-child(3) {
      transform: rotate(45deg) translate(-5px, -6px);
    }

    .nav-menu a {
      color: #fff;
      text-decoration: none;
      font-family: 'Rajdhani', sans-serif;
      font-weight: 600;
      font-size: 18px;
      letter-spacing: 1px;
      position: relative;
      transition: color 0.3s ease;
      text-transform: uppercase;
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 8px 16px;
    }

    .nav-menu a::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0;
      height: 2px;
      background: linear-gradient(90deg, #e50914, #00ff88);
      transition: all 0.3s ease;
      border-radius: 1px;
    }

    .nav-menu a:hover {
      color: #FF6B6B;
    }

    .nav-menu a:hover::before {
      width: 100%;
    }

    .nav-icon {
      font-size: 16px;
      transition: color 0.3s ease;
    }

    /* Main Content Section - Full Screen Immersive */
    .main-section {
      min-height: 100vh;
      background: linear-gradient(45deg, #1A1A2E 0%, #16213E 50%, #0F0F23 100%);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 120px 40px 40px;
      position: relative;
      z-index: 5;
    }

    .main-section::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('/images/among_us_background.svg') center/cover;
      opacity: 0.2;
      z-index: 1;
    }

    /* Among Us themed floating crewmates */
    .floating-crewmates {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      z-index: 2;
      overflow: hidden;
    }

    /* Additional floating elements for immersion */
    .floating-particles {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      z-index: 1;
      overflow: hidden;
    }

    .particle {
      position: absolute;
      width: 4px;
      height: 4px;
      background: rgba(255, 255, 255, 0.6);
      border-radius: 50%;
      animation: particleFloat 15s linear infinite;
    }

    @keyframes particleFloat {
      0% {
        transform: translateY(100vh) translateX(0);
        opacity: 0;
      }
      10% {
        opacity: 1;
      }
      90% {
        opacity: 1;
      }
      100% {
        transform: translateY(-100px) translateX(100px);
        opacity: 0;
      }
    }

    .crewmate {
      position: absolute;
      width: 40px;
      height: 40px;
      background: url('/images/among_us_crewmate_blue.svg') center/contain no-repeat;
      animation: float 20s linear infinite;
      opacity: 0.3;
    }

    .crewmate:nth-child(2) {
      background: url('/images/among_us_crewmate_red.svg') center/contain no-repeat;
      animation-delay: -5s;
      animation-duration: 25s;
    }

    .crewmate:nth-child(3) {
      background: url('/images/among_us_crewmate_green.svg') center/contain no-repeat;
      animation-delay: -10s;
      animation-duration: 30s;
    }

    .crewmate:nth-child(4) {
      background: url('/images/among_us_impostor.svg') center/contain no-repeat;
      animation-delay: -15s;
      animation-duration: 35s;
    }

    @keyframes float {
      0% {
        transform: translateX(-50px) translateY(100vh) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 0.3;
      }
      90% {
        opacity: 0.3;
      }
      100% {
        transform: translateX(calc(100vw + 50px)) translateY(-100px) rotate(360deg);
        opacity: 0;
      }
    }

    .main-section::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.8) 100%);
      z-index: 2;
    }

    .content-wrapper {
      position: relative;
      z-index: 10;
      text-align: center;
      animation: contentFadeIn 1s ease-out;
      max-width: 900px;
      width: 90%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 80vh;
    }

    @keyframes contentFadeIn {
      0% {
        transform: translateY(30px);
        opacity: 0;
      }
      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .page-title {
      font-family: 'Orbitron', monospace;
      font-size: 64px;
      font-weight: 900;
      margin-bottom: 30px;
      background: linear-gradient(45deg, #FF6B6B, #FF0000, #68D391);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-transform: uppercase;
      letter-spacing: 4px;
      animation: titleGlow 3s ease-in-out infinite;
      text-shadow: 0 0 30px rgba(255, 107, 107, 0.3);
    }

    @keyframes titleGlow {
      0%, 100% {
        text-shadow: 0 0 20px rgba(229, 9, 20, 0.5);
      }
      50% {
        text-shadow: 0 0 30px rgba(229, 9, 20, 0.8), 0 0 40px rgba(0, 255, 136, 0.3);
      }
    }

    .page-subtitle {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 40px;
      color: #ccc;
      font-family: 'Rajdhani', sans-serif;
      text-transform: uppercase;
      letter-spacing: 2px;
    }

    /* Waiting Message */
    .waiting-message {
      text-align: center;
      margin: 40px 0;
      animation: pulse 2s ease-in-out infinite;
    }

    .waiting-icon {
      font-size: 72px;
      margin-bottom: 20px;
    }

    .waiting-text {
      font-size: 28px;
      color: #A0AEC0;
      font-family: 'Rajdhani', sans-serif;
      text-transform: uppercase;
      letter-spacing: 2px;
      font-weight: 600;
    }

    /* Round Details Section */
    .round-details-section {
      margin: 40px 0;
      animation: slideInUp 0.8s ease-out;
    }

    @keyframes slideInUp {
      0% {
        transform: translateY(50px);
        opacity: 0;
      }
      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .round-info-card {
      background: linear-gradient(135deg, rgba(15, 15, 35, 0.95) 0%, rgba(25, 25, 55, 0.95) 100%);
      border: 2px solid rgba(255, 107, 107, 0.4);
      border-radius: 25px;
      padding: 50px;
      backdrop-filter: blur(20px);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      transform: none;
      box-shadow: 
        0 25px 50px rgba(0, 0, 0, 0.4),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
    }

    .round-info-card::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(45deg, transparent, rgba(255, 107, 107, 0.1), transparent);
      animation: shimmer 3s ease-in-out infinite;
      z-index: 1;
    }

    .round-info-card > * {
      position: relative;
      z-index: 2;
    }

    @keyframes shimmer {
      0% {
        transform: translateX(-100%) translateY(-100%) rotate(45deg);
      }
      100% {
        transform: translateX(100%) translateY(100%) rotate(45deg);
      }
    }

    .round-info-card:hover {
      border-color: #FF6B6B;
      box-shadow: 
        0 30px 60px rgba(255, 107, 107, 0.4),
        inset 0 1px 0 rgba(255, 255, 255, 0.2);
      transform: scale(1.02);
    }

    .round-title {
      font-family: 'Orbitron', monospace;
      font-size: 24px;
      font-weight: 900;
      color: #FF6B6B;
      margin-bottom: 10px;
      text-transform: uppercase;
      letter-spacing: 2px;
    }

    .round-name {
      font-family: 'Rajdhani', sans-serif;
      font-size: 36px;
      font-weight: 700;
      color: #E2E8F0;
      margin-bottom: 20px;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .round-description {
      font-size: 18px;
      color: #A0AEC0;
      line-height: 1.6;
      margin-bottom: 30px;
      text-align: left;
    }

    .round-rules {
      background: rgba(255, 107, 107, 0.1);
      border: 1px solid rgba(255, 107, 107, 0.3);
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 20px;
      text-align: left;
    }

    .rules-title {
      font-size: 1rem;
      font-weight: 600;
      color: #FF6B6B;
      margin-bottom: 8px;
      text-transform: uppercase;
      letter-spacing: 1px;
      text-align: left;
    }

    .rules-content {
      font-size: 0.95rem;
      line-height: 1.5;
      color: #CBD5E0;
      margin: 0;
      text-align: left;
    }

    .round-participation {
      text-align: left;
      margin-bottom: 40px;
      margin-top: 30px;
    }

    .participation-format {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      gap: 15px;
      flex-wrap: wrap;
    }

    .participation-label {
      font-size: 16px;
      font-weight: 600;
      color: #E2E8F0;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .participation-badge {
      display: inline-block;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 12px 24px;
      border-radius: 25px;
      font-size: 1rem;
      font-weight: 700;
      text-transform: uppercase;
      letter-spacing: 2px;
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .participation-badge::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.5s;
    }

    .participation-badge:hover::before {
      left: 100%;
    }

    .participation-badge:hover {
      transform: translateY(-2px);
      box-shadow: 0 12px 35px rgba(102, 126, 234, 0.6);
    }

    .participation-badge.team {
      background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      box-shadow: 0 8px 25px rgba(245, 87, 108, 0.4);
    }

    .participation-badge.team:hover {
      box-shadow: 0 12px 35px rgba(245, 87, 108, 0.6);
    }

    .participation-badge.individual {
      background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
      box-shadow: 0 8px 25px rgba(79, 172, 254, 0.4);
    }

    .participation-badge.individual:hover {
      box-shadow: 0 12px 35px rgba(79, 172, 254, 0.6);
    }

    .round-timer-display {
      background: rgba(26, 26, 46, 0.8);
      border: 2px solid #68D391;
      border-radius: 15px;
      padding: 20px;
      text-align: center;
      margin-bottom: 30px;
      position: relative;
      overflow: hidden;
    }

    .round-timer-display::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(104, 211, 145, 0.2), transparent);
      animation: timerGlow 2s ease-in-out infinite;
    }

    @keyframes timerGlow {
      0% {
        left: -100%;
      }
      100% {
        left: 100%;
      }
    }

    .round-timer-display .timer-label {
      font-family: 'Rajdhani', sans-serif;
      font-size: 18px;
      font-weight: 600;
      color: #68D391;
      text-transform: uppercase;
      letter-spacing: 1px;
      display: block;
      margin-bottom: 10px;
    }

    .round-timer-display .timer-value {
      font-family: 'Orbitron', monospace;
      font-size: 48px;
      font-weight: 900;
      color: #68D391;
      text-shadow: 0 0 20px rgba(104, 211, 145, 0.6);
    }

    .round-links {
      margin-bottom: 40px;
      margin-top: 30px;
    }

    .links-title {
      font-size: 1rem;
      font-weight: 600;
      color: #FF6B6B;
      margin-bottom: 15px;
      text-transform: uppercase;
      letter-spacing: 1px;
      text-align: left;
    }

    .links-list {
      display: flex;
      flex-direction: column;
      gap: 15px;
      align-items: flex-start;
    }

    .link-item {
      background: rgba(26, 26, 46, 0.8);
      border: 2px solid rgba(255, 107, 107, 0.5);
      border-radius: 12px;
      padding: 20px 30px;
      color: #E2E8F0;
      font-size: 18px;
      font-weight: 600;
      transition: all 0.3s ease;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 15px;
      min-width: 300px;
      justify-content: flex-start;
    }

    .link-item:hover {
      border-color: #FF6B6B;
      background: rgba(255, 107, 107, 0.2);
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
    }

    .link-item a {
      color: #FF6B6B;
      text-decoration: none;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .link-item a:hover {
      text-decoration: underline;
      color: #FF0000;
    }

    .round-attachments {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-bottom: 20px;
      justify-content: center;
      min-height: 50px;
    }

    .attachment-item {
      background: rgba(26, 26, 46, 0.8);
      border: 2px solid rgba(255, 107, 107, 0.5);
      border-radius: 8px;
      padding: 12px 16px;
      color: #E2E8F0;
      font-size: 14px;
      font-weight: 600;
      transition: all 0.3s ease;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .attachment-item:hover {
      border-color: #FF6B6B;
      background: rgba(255, 107, 107, 0.2);
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
    }

    .attachment-item a {
      color: #FF6B6B;
      text-decoration: none;
      font-weight: 600;
    }

    .attachment-item a:hover {
      text-decoration: underline;
      color: #FF0000;
    }

    .round-url {
      text-align: center;
      margin-top: 20px;
    }

    .url-link {
      display: inline-block;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 15px 30px;
      border-radius: 30px;
      text-decoration: none;
      font-weight: 700;
      font-size: 1.1rem;
      text-transform: uppercase;
      letter-spacing: 1px;
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
      border: 2px solid transparent;
    }

    .url-link::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      transition: left 0.5s;
    }

    .url-link:hover::before {
      left: 100%;
    }

    .url-link:hover {
      transform: translateY(-3px);
      box-shadow: 0 15px 40px rgba(102, 126, 234, 0.6);
      border-color: rgba(255, 255, 255, 0.3);
    }

    .url-link:active {
      transform: translateY(-1px);
    }

    .event-status {
      font-size: 16px;
      font-weight: 600;
      color: #68D391;
      font-family: 'Rajdhani', sans-serif;
      text-transform: uppercase;
      letter-spacing: 1px;
      margin-top: 20px;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .header {
        padding: 20px 25px;
      }

      .nav-menu {
        position: fixed;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100vh;
        background: rgba(0, 0, 0, 0.95);
        flex-direction: column;
        justify-content: center;
        align-items: center;
        transition: left 0.3s ease;
        z-index: 1000;
      }

      .nav-menu.active {
        left: 0;
      }

      .nav-menu a {
        font-size: 24px;
        margin: 20px 0;
        padding: 15px 30px;
        border-radius: 10px;
        background: rgba(255, 107, 107, 0.1);
        transition: all 0.3s ease;
      }

      .nav-menu a:hover {
        background: rgba(255, 107, 107, 0.3);
        transform: scale(1.05);
      }

      .hamburger {
        display: flex;
        z-index: 1001;
      }

      .page-title {
        font-size: 32px;
        letter-spacing: 2px;
      }

      .page-subtitle {
        font-size: 18px;
      }

      .main-section {
        padding: 120px 20px 40px;
      }

      .round-name {
        font-size: 28px;
      }

      .round-timer-display .timer-value {
        font-size: 36px;
      }

      .profile-card {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 20px;
      }

      .profile-avatar {
        width: 120px;
        height: 120px;
        margin: 0 auto;
      }

      .links-list {
        align-items: flex-start;
      }

      .link-item {
        min-width: 250px;
        padding: 15px 25px;
        font-size: 16px;
      }
    }

    /* Animation Effects */
    .pulse {
      animation: pulse 2s ease-in-out infinite;
    }

    @keyframes pulse {
      0%, 100% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.05);
      }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <header class="header">
    <nav class="nav">
      <a href="/" class="logo">SDC GAMES</a>
      <div class="hamburger" onclick="toggleMenu()">
        <span></span>
        <span></span>
        <span></span>
      </div>
      <ul class="nav-menu" id="navMenu">
        <li><a href="/lets-begin"><span class="nav-icon">♥</span>Let's Begin</a></li>
        <li><a href="/participants"><span class="nav-icon">👥</span>Participants</a></li>
        <li><a href="/game-hosts"><span class="nav-icon">🎯</span>Game Hosts</a></li>
      </ul>
    </nav>
  </header>

  <!-- Main Content Section -->
  <section class="main-section">
    <!-- Floating Among Us crewmates -->
    <div class="floating-crewmates">
      <div class="crewmate"></div>
      <div class="crewmate"></div>
      <div class="crewmate"></div>
      <div class="crewmate"></div>
    </div>
    
    <!-- Floating particles for immersion -->
    <div class="floating-particles" id="floatingParticles"></div>
    
    <div class="content-wrapper">
      <h1 class="page-title">AMONG US</h1>
      <p class="page-subtitle" id="pageSubtitle">Round is starting soon</p>
      
      <!-- Default waiting message -->
      <div class="waiting-message" id="waitingMessage">
        <div class="waiting-icon">⏳</div>
        <p class="waiting-text">Round is starting soon</p>
      </div>
      
      <!-- Round details section (hidden by default) -->
      <div class="round-details-section" id="roundDetailsSection" style="display: none;">
              <div class="round-info-card">
                <h2 class="round-title" id="roundTitle">Round 1</h2>
                <h3 class="round-name" id="roundName">Mission Alpha</h3>
                <p class="round-description" id="roundDescription">Complete all tasks to prepare the spaceship for departure.</p>
                
                <!-- Rules section -->
                <div class="round-rules" id="roundRulesContainer" style="display: none;">
                  <h4 class="rules-title">📋 Rules:</h4>
                  <p class="rules-content" id="roundRules">Follow all instructions carefully.</p>
    </div>
                
                <!-- Participation type -->
                <div class="round-participation" id="roundParticipationContainer" style="display: none;">
                  <div class="participation-format">
                    <span class="participation-label">Participation Format:</span>
                    <span class="participation-badge" id="roundParticipation">Individual</span>
                  </div>
                </div>

                <!-- Round Links -->
                <div class="round-links" id="roundLinksContainer" style="display: none;">
                  <h4 class="links-title">🔗 Proceed to Round:</h4>
                  <div class="links-list" id="roundLinksList">
                    <!-- Links will be populated by JavaScript -->
                  </div>
                </div>

                <!-- Round timer -->
                <div class="round-timer-display">
                  <span class="timer-label">Time Remaining:</span>
                  <span class="timer-value" id="roundTimerValue">05:00</span>
                </div>
      </div>
    </div>

      <p class="event-status" id="eventStatus">Waiting for round to start...</p>
    </div>
  </section>

  <script>
    // Hamburger menu toggle
    function toggleMenu() {
      const navMenu = document.getElementById('navMenu');
      const hamburger = document.querySelector('.hamburger');
      navMenu.classList.toggle('active');
      hamburger.classList.toggle('active');
    }

    // Close menu when clicking on a link
    document.addEventListener('DOMContentLoaded', function() {
      const navLinks = document.querySelectorAll('.nav-menu a');
      navLinks.forEach(link => {
        link.addEventListener('click', () => {
          const navMenu = document.getElementById('navMenu');
          const hamburger = document.querySelector('.hamburger');
          navMenu.classList.remove('active');
          hamburger.classList.remove('active');
        });
      });
    });

    // Current round state
    let currentRoundData = null;
    let isRoundActive = false;
    let lastStateHash = '';

    // Initialize page
    document.addEventListener('DOMContentLoaded', async function() {
      // Load initial round state
      await updateRoundState();
      
      // Start real-time updates every second
      setInterval(updateRoundState, 1000);
      
      // Create floating particles for immersion
      createFloatingParticles();
      
      // Add click handler to redirect to Game Over page
      addGameOverRedirect();
    });

    // Add Game Over redirect functionality
    function addGameOverRedirect() {
      // Add click handler to the main content area
      const contentWrapper = document.querySelector('.content-wrapper');
      if (contentWrapper) {
        contentWrapper.addEventListener('click', function(e) {
          // Only redirect if clicking on the main content area, not on specific interactive elements
          if (e.target === contentWrapper || e.target.classList.contains('page-title') || e.target.classList.contains('page-subtitle')) {
            // Add a small delay for visual feedback
            setTimeout(() => {
              window.location.href = '/lets-begin-2';
            }, 300);
          }
        });
        
        // Add cursor pointer to indicate clickability
        contentWrapper.style.cursor = 'pointer';
      }
      
      // Add click handler to the round info card
      const roundInfoCard = document.querySelector('.round-info-card');
      if (roundInfoCard) {
        roundInfoCard.addEventListener('click', function(e) {
          // Prevent event bubbling to content wrapper
          e.stopPropagation();
          // Add a small delay for visual feedback
          setTimeout(() => {
            window.location.href = '/lets-begin-2';
          }, 300);
        });
        
        // Add cursor pointer to indicate clickability
        roundInfoCard.style.cursor = 'pointer';
      }
    }

    // Create floating particles for immersion
    function createFloatingParticles() {
      const particlesContainer = document.getElementById('floatingParticles');
      const particleCount = 20;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.left = Math.random() * 100 + '%';
        particle.style.animationDelay = Math.random() * 15 + 's';
        particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
        particlesContainer.appendChild(particle);
      }
    }

    // Update round state from server
    async function updateRoundState() {
      try {
        const response = await fetch('/api/current-round');
        if (!response.ok) {
          console.error('Failed to fetch round state');
          return;
        }
        
        const data = await response.json();
        const currentHash = JSON.stringify(data);
        
        // Only update if state has changed
        if (currentHash !== lastStateHash) {
          console.log('Round state updated:', data);
          
          isRoundActive = data.isActive;
          currentRoundData = data.roundData;
          lastStateHash = currentHash;
          
          // Update UI based on new state
          updateUI(data);
        }
      } catch (error) {
        console.error('Error updating round state:', error);
      }
    }

    // Update UI based on round state
    function updateUI(data) {
      const waitingMessage = document.getElementById('waitingMessage');
      const roundDetailsSection = document.getElementById('roundDetailsSection');
      const pageSubtitle = document.getElementById('pageSubtitle');
      const eventStatus = document.getElementById('eventStatus');

      if (data.isActive && data.roundData) {
        // Show round details
        waitingMessage.style.display = 'none';
        roundDetailsSection.style.display = 'block';
        pageSubtitle.textContent = 'Round Active';
        eventStatus.textContent = 'Round in progress...';
      
      // Update round information
        updateRoundInfo(data.roundData);
        
        // Update timer
        updateRoundTimer(data.roundData.timerDisplay);
      } else {
        // Show waiting message
        waitingMessage.style.display = 'block';
        roundDetailsSection.style.display = 'none';
        pageSubtitle.textContent = 'Round is starting soon';
        eventStatus.textContent = 'Waiting for round to start...';
      }
    }

    // Update round information display
    function updateRoundInfo(roundData) {
      console.log('Updating round info with data:', roundData);
      
      document.getElementById('roundTitle').textContent = `Round ${roundData.roundNumber}`;
      document.getElementById('roundName').textContent = roundData.roundName;
      document.getElementById('roundDescription').innerHTML = roundData.roundDetails.replace(/\n/g, '<br>');
      
      // Update rules
      const rulesContainer = document.getElementById('roundRulesContainer');
      const rulesContent = document.getElementById('roundRules');
      if (roundData.roundRules && roundData.roundRules.trim() !== '') {
        rulesContent.innerHTML = roundData.roundRules.replace(/\n/g, '<br>');
        rulesContainer.style.display = 'block';
        console.log('Rules set:', roundData.roundRules);
      } else {
        rulesContainer.style.display = 'none';
        console.log('No rules provided');
      }

      // Update participation type
      const participationContainer = document.getElementById('roundParticipationContainer');
      const participationBadge = document.getElementById('roundParticipation');
      if (roundData.participationType) {
        participationBadge.textContent = roundData.participationType.charAt(0).toUpperCase() + roundData.participationType.slice(1);
        participationBadge.className = `participation-badge ${roundData.participationType}`;
        participationContainer.style.display = 'block';
        console.log('Participation type set:', roundData.participationType);
      } else {
        participationContainer.style.display = 'none';
        console.log('No participation type provided');
      }

      // Update round links
      const linksContainer = document.getElementById('roundLinksContainer');
      const linksList = document.getElementById('roundLinksList');
      if (roundData.roundLinks && roundData.roundLinks.length > 0) {
        linksList.innerHTML = '';
        roundData.roundLinks.forEach(link => {
          const linkItem = document.createElement('div');
          linkItem.className = 'link-item';
          linkItem.innerHTML = `
            <a href="${link.url}" target="_blank">
              <span>${link.name}:</span>
              <span>${link.url}</span>
            </a>
          `;
          linksList.appendChild(linkItem);
        });
        linksContainer.style.display = 'block';
        console.log('Round links set:', roundData.roundLinks);
      } else {
        linksContainer.style.display = 'none';
        console.log('No round links provided');
      }
    }

    // Update round timer display
    function updateRoundTimer(timerDisplay) {
      const timerElement = document.getElementById('roundTimerValue');
      if (timerElement) {
        timerElement.textContent = timerDisplay;
        
        // Add pulse effect when time is running out
        const [minutes, seconds] = timerDisplay.split(':').map(Number);
        if (minutes === 0 && seconds <= 30) {
          timerElement.parentElement.style.borderColor = '#FF6B6B';
          timerElement.style.color = '#FF6B6B';
          timerElement.parentElement.classList.add('pulse');
      } else {
          timerElement.parentElement.style.borderColor = '#68D391';
          timerElement.style.color = '#68D391';
          timerElement.parentElement.classList.remove('pulse');
        }
      }
    }
  </script>
</body>
</html>
